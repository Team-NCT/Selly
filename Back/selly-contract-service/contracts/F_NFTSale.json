{
  "contractName": "F_NFTSale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_F_NFTCA",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "F_CA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "SaleCA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "CancelSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "F_CA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "SaleCA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payValue",
          "type": "uint256"
        }
      ],
      "name": "Purchase",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "F_NFTCA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "F_NFTContract",
      "outputs": [
        {
          "internalType": "contract IFractionalizedNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "F_NFTContractERC20",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destruct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_F_NFTCA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"F_CA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"SaleCA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"CancelSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"F_CA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"SaleCA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payValue\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"F_NFTCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"F_NFTContract\",\"outputs\":[{\"internalType\":\"contract IFractionalizedNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"F_NFTContractERC20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/F_NFTSale.sol\":\"F_NFTSale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/F_NFTSale.sol\":{\"keccak256\":\"0x9aeefaafc4cd96e5a683c91dce19d6568a35cf3bc4930e86c1a0d746649c61eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://912752bb0f0427c60037d7baaa31c79a4d679d5df24574eac1f754d8aab6d45e\",\"dweb:/ipfs/QmRGhyEfWaiqdEhDUVh6gHBwFuXCy9ZSiAZrFXHXJgHwr8\"]},\"project:/contracts/IFractionalizedNFT.sol\":{\"keccak256\":\"0x3ccc9aaaf366fa7d640c8629116868a34bf280dcbdbb82d5f7072f9fe7b60cde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://735d2266c5e808474282e6281b2d8652f7484085e0d746b6ea128ca49470018a\",\"dweb:/ipfs/QmR1Gr2CPJwcYK5vdLK4gszY8bE4FjpYQSyKFHqhrhSHdi\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161084538038061084583398101604081905261002f916100a2565b600080546001600160a01b039485166001600160a01b0319918216811790925560018054821683179055600280549690951695811695909517909355600380549094169092179092556004919091556005556100e5565b80516001600160a01b038116811461009d57600080fd5b919050565b600080600080608085870312156100b857600080fd5b6100c185610086565b93506100cf60208601610086565b6040860151606090960151949790965092505050565b610751806100f46000396000f3fe6080604052600436106100955760003560e01c8063a035b1fe11610059578063a035b1fe14610152578063aa8c217c14610168578063b21960241461017e578063e7e104901461019e578063efef39a1146101b357600080fd5b806308551a53146100a157806312065fe0146100de5780632b68b9c6146100fb57806358a5bf641461011257806372c244351461013257600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b50475b6040519081526020016100d5565b34801561010757600080fd5b506101106101c6565b005b34801561011e57600080fd5b506001546100c1906001600160a01b031681565b34801561013e57600080fd5b506000546100c1906001600160a01b031681565b34801561015e57600080fd5b506100ed60055481565b34801561017457600080fd5b506100ed60045481565b34801561018a57600080fd5b506003546100c1906001600160a01b031681565b3480156101aa57600080fd5b50610110610305565b6101106101c136600461067a565b610438565b6000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102329190610693565b156102995760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c792063616e206465737472756374207768656e20636f6e74726163742060448201526b686173206e6f20706965636560a01b60648201526084015b60405180910390fd5b600154604051630f2cd7bd60e21b81523060048201526001600160a01b0390911690633cb35ef490602401600060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b50506002546001600160a01b0316915050ff5b6002546001600160a01b0316331461035f5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792073656c6c65722063616e2063616e63656c2073616c6500000000006044820152606401610290565b6000546004805460405163a9059cbb60e01b8152339281019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d891906106ac565b506000600455600354600254604080516001600160a01b0393841681523060208201529290911682820152517fd9b6a328868f7e8d317d22d8a06ed8853be50e49fa45fb32826e7efaef4b86519181900360600190a16104366101c6565b565b6004548111156104a05760405162461bcd60e51b815260206004820152602d60248201527f43616e277420627579206d6f726520706965636573207468616e20746865206e60448201526c756d6265722073656c6c696e6760981b6064820152608401610290565b6002546001600160a01b031633036104eb5760405162461bcd60e51b815260206004820152600e60248201526d43616e277420627579206d696e6560901b6044820152606401610290565b806005546104f991906106eb565b341461053b5760405162461bcd60e51b815260206004820152601160248201527050617920636f727265637420707269636560781b6044820152606401610290565b806004600082825461054d9190610708565b909155505060005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c791906106ac565b506002546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610601573d6000803e3d6000fd5b50600354600254604080516001600160a01b0393841681523060208201529290911682820152336060830152608082018390523460a0830152517fdccb5bce6e0213237e0f6a2b3fac1111566917989d8d207b69e82385a13a97599181900360c00190a1600454600003610677576106776101c6565b50565b60006020828403121561068c57600080fd5b5035919050565b6000602082840312156106a557600080fd5b5051919050565b6000602082840312156106be57600080fd5b815180151581146106ce57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610702576107026106d5565b92915050565b81810381811115610702576107026106d556fea2646970667358221220ace31402a3221cd8c32283d380ca19492fca00f4bb72a6a2facd22bcdc3b3aa364736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063a035b1fe11610059578063a035b1fe14610152578063aa8c217c14610168578063b21960241461017e578063e7e104901461019e578063efef39a1146101b357600080fd5b806308551a53146100a157806312065fe0146100de5780632b68b9c6146100fb57806358a5bf641461011257806372c244351461013257600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b50475b6040519081526020016100d5565b34801561010757600080fd5b506101106101c6565b005b34801561011e57600080fd5b506001546100c1906001600160a01b031681565b34801561013e57600080fd5b506000546100c1906001600160a01b031681565b34801561015e57600080fd5b506100ed60055481565b34801561017457600080fd5b506100ed60045481565b34801561018a57600080fd5b506003546100c1906001600160a01b031681565b3480156101aa57600080fd5b50610110610305565b6101106101c136600461067a565b610438565b6000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102329190610693565b156102995760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c792063616e206465737472756374207768656e20636f6e74726163742060448201526b686173206e6f20706965636560a01b60648201526084015b60405180910390fd5b600154604051630f2cd7bd60e21b81523060048201526001600160a01b0390911690633cb35ef490602401600060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b50506002546001600160a01b0316915050ff5b6002546001600160a01b0316331461035f5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792073656c6c65722063616e2063616e63656c2073616c6500000000006044820152606401610290565b6000546004805460405163a9059cbb60e01b8152339281019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d891906106ac565b506000600455600354600254604080516001600160a01b0393841681523060208201529290911682820152517fd9b6a328868f7e8d317d22d8a06ed8853be50e49fa45fb32826e7efaef4b86519181900360600190a16104366101c6565b565b6004548111156104a05760405162461bcd60e51b815260206004820152602d60248201527f43616e277420627579206d6f726520706965636573207468616e20746865206e60448201526c756d6265722073656c6c696e6760981b6064820152608401610290565b6002546001600160a01b031633036104eb5760405162461bcd60e51b815260206004820152600e60248201526d43616e277420627579206d696e6560901b6044820152606401610290565b806005546104f991906106eb565b341461053b5760405162461bcd60e51b815260206004820152601160248201527050617920636f727265637420707269636560781b6044820152606401610290565b806004600082825461054d9190610708565b909155505060005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c791906106ac565b506002546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610601573d6000803e3d6000fd5b50600354600254604080516001600160a01b0393841681523060208201529290911682820152336060830152608082018390523460a0830152517fdccb5bce6e0213237e0f6a2b3fac1111566917989d8d207b69e82385a13a97599181900360c00190a1600454600003610677576106776101c6565b50565b60006020828403121561068c57600080fd5b5035919050565b6000602082840312156106a557600080fd5b5051919050565b6000602082840312156106be57600080fd5b815180151581146106ce57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610702576107026106d5565b92915050565b81810381811115610702576107026106d556fea2646970667358221220ace31402a3221cd8c32283d380ca19492fca00f4bb72a6a2facd22bcdc3b3aa364736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:614:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:27"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:27",
                "type": ""
              }
            ],
            "src": "14:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "328:284:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "375:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "384:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "387:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "377:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "377:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "377:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "349:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "358:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "370:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:33:27"
                  },
                  "nodeType": "YulIf",
                  "src": "338:53:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "400:50:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "440:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "410:29:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:40:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "400:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "459:59:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "503:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "514:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "499:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "499:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "469:29:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "469:49:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "459:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "527:35:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "547:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "558:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "537:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:25:27"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "571:35:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "591:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "602:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "587:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "587:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "581:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:25:27"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "571:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "270:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "281:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "293:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "301:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "309:6:27",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "317:6:27",
                "type": ""
              }
            ],
            "src": "196:416:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5107:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:27",
                "type": ""
              }
            ],
            "src": "14:203:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:27",
                "type": ""
              }
            ],
            "src": "222:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "532:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "542:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "554:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "565:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "550:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "550:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "542:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "584:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "599:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "615:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "620:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "611:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "611:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "624:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "607:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "607:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "595:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "595:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "577:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "577:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "577:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IFractionalizedNFT_$1201__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "501:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "512:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "523:4:27",
                "type": ""
              }
            ],
            "src": "404:230:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "765:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "777:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "788:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "773:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "765:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "807:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "822:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "838:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "843:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "834:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "834:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "847:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "830:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "830:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "818:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "818:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "800:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$2208__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "724:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "735:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "746:4:27",
                "type": ""
              }
            ],
            "src": "639:218:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "932:110:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "978:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "990:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "980:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "980:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "980:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "953:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "962:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "949:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "974:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "945:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "945:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "942:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1003:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1026:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "898:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "909:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "921:6:27",
                "type": ""
              }
            ],
            "src": "862:180:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1128:103:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1149:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1158:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1145:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1145:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1170:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1141:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1141:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1138:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1199:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1215:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1209:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1209:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1199:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1094:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1105:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1117:6:27",
                "type": ""
              }
            ],
            "src": "1047:184:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1410:234:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1427:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1438:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1420:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1420:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1461:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1472:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1457:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1457:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1477:2:27",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1450:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1450:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1500:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1511:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1496:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:18:27"
                      },
                      {
                        "hexValue": "4f6e6c792063616e206465737472756374207768656e20636f6e747261637420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1516:34:27",
                        "type": "",
                        "value": "Only can destruct when contract "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1489:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1571:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1582:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1567:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1567:18:27"
                      },
                      {
                        "hexValue": "686173206e6f207069656365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1587:14:27",
                        "type": "",
                        "value": "has no piece"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1560:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1560:42:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1560:42:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1611:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1623:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1634:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1619:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1611:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8a52ff464248e64bdce52e6500f081873568adcdf28c1d05ea74aca1eba80cc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1387:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1401:4:27",
                "type": ""
              }
            ],
            "src": "1236:408:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1823:177:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1840:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1851:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1833:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1833:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1833:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1874:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1885:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1870:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:27",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1863:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1863:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1863:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1913:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1924:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1909:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1909:18:27"
                      },
                      {
                        "hexValue": "4f6e6c792073656c6c65722063616e2063616e63656c2073616c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1929:29:27",
                        "type": "",
                        "value": "Only seller can cancel sale"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:57:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1968:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1980:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1991:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1976:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1968:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a2f44736c86924af9d0ae454a410929a75fdc6d77df18748572abd303b33840e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1814:4:27",
                "type": ""
              }
            ],
            "src": "1649:351:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2134:145:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2144:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2156:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2167:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2152:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2152:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2144:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2186:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2201:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2217:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2222:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2213:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2213:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2226:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2209:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2209:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2197:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2179:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2179:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2179:51:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2250:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:18:27"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2266:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2239:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2239:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2095:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2106:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2114:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2125:4:27",
                "type": ""
              }
            ],
            "src": "2005:274:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2362:199:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2408:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2417:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2420:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2410:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2410:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2410:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2383:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2392:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2379:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2379:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2404:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2375:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2372:52:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2433:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2452:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2446:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2446:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2437:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2515:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2524:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2527:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2517:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2517:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2517:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2484:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2505:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2498:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2498:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2491:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2491:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2481:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2481:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2474:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2474:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2471:60:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2540:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2550:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2540:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2328:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2339:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2351:6:27",
                "type": ""
              }
            ],
            "src": "2284:277:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2723:227:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2733:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2745:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2756:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2741:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2741:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2733:4:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2768:29:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2786:3:27",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2791:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2782:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2782:11:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2795:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2778:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2778:19:27"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2772:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2813:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2828:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2836:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2824:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2824:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2806:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2806:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2806:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2860:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2871:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2856:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2856:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2880:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2888:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2876:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2876:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2849:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2849:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2849:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2912:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2923:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2908:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2908:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2932:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2940:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2928:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2901:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2901:43:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2676:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2687:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2695:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2703:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2714:4:27",
                "type": ""
              }
            ],
            "src": "2566:384:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3129:235:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3146:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3157:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3139:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3139:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3139:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3180:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3191:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3176:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3176:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:2:27",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3169:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3169:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3169:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3219:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3230:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3215:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:18:27"
                      },
                      {
                        "hexValue": "43616e277420627579206d6f726520706965636573207468616e20746865206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3235:34:27",
                        "type": "",
                        "value": "Can't buy more pieces than the n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3208:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3208:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3208:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3290:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3301:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3286:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3286:18:27"
                      },
                      {
                        "hexValue": "756d6265722073656c6c696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3306:15:27",
                        "type": "",
                        "value": "umber selling"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3279:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3279:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3279:43:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3331:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3343:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3354:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3339:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3339:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3331:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_46e7d1ecf6390b3469d5cca24965af3b76764dd2e67c013a46649cda9be4e1ae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3106:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3120:4:27",
                "type": ""
              }
            ],
            "src": "2955:409:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3543:164:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3560:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3571:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3594:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3605:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3590:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3590:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3610:2:27",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3583:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3583:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3583:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3633:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3644:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3629:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3629:18:27"
                      },
                      {
                        "hexValue": "43616e277420627579206d696e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3649:16:27",
                        "type": "",
                        "value": "Can't buy mine"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3622:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:44:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3622:44:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3675:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3687:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3698:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3683:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3683:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3675:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f538b58aec58d0868a32c17e16e380d65e7f21281b58959578a69af73ab24088__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3520:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3534:4:27",
                "type": ""
              }
            ],
            "src": "3369:338:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3744:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3768:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3773:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3764:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3764:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3754:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3754:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3801:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3804:4:27",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3794:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3794:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3794:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3825:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3828:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3818:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3818:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3818:15:27"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3712:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3896:116:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3906:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3921:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3924:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3917:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3917:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3906:7:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3984:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3986:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3986:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3986:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3955:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3948:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3948:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3962:1:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "3969:7:27"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3978:1:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3965:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3965:15:27"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3959:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3959:22:27"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "3945:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3945:37:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3938:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3938:45:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3935:71:27"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3875:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3878:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3884:7:27",
                "type": ""
              }
            ],
            "src": "3844:168:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4191:167:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4208:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4219:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4201:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4201:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4201:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4242:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4253:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4238:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4238:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4258:2:27",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4231:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4231:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4231:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4281:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4292:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4277:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4277:18:27"
                      },
                      {
                        "hexValue": "50617920636f7272656374207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4297:19:27",
                        "type": "",
                        "value": "Pay correct price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4270:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4270:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4270:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4326:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4338:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4349:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4334:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4334:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4326:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b25f579279daf14688bec7089eb1a81f6805eaff04ae5f34f59d0bae2d53f56a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4168:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4182:4:27",
                "type": ""
              }
            ],
            "src": "4017:341:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4412:79:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4422:17:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4434:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4437:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4430:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4430:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4422:4:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4463:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4465:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4465:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4465:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "4454:4:27"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4460:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4451:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4451:11:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4448:37:27"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4394:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4397:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4403:4:27",
                "type": ""
              }
            ],
            "src": "4363:128:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4737:368:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4747:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4759:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4770:3:27",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4755:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4755:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4747:4:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4783:29:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4801:3:27",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4806:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4797:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4797:11:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4810:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4793:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:19:27"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4787:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4828:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4843:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4851:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4839:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4839:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4821:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4821:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4821:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4875:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4886:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4871:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4871:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4895:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4903:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4891:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4891:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4864:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4864:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4927:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4938:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4923:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4923:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4947:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4955:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4943:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4943:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4916:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4916:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4916:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4979:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4990:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4975:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4975:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4999:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5007:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4995:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4995:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4968:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4968:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4968:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5031:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5042:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:19:27"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5048:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5020:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5020:35:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5020:35:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5075:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5086:3:27",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5071:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5071:19:27"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5092:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5064:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5064:35:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5064:35:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4666:9:27",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4677:6:27",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4685:6:27",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4693:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4701:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4709:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4717:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4728:4:27",
                "type": ""
              }
            ],
            "src": "4496:609:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IFractionalizedNFT_$1201__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2208__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8a52ff464248e64bdce52e6500f081873568adcdf28c1d05ea74aca1eba80cc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Only can destruct when contract \")\n        mstore(add(headStart, 96), \"has no piece\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2f44736c86924af9d0ae454a410929a75fdc6d77df18748572abd303b33840e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Only seller can cancel sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_46e7d1ecf6390b3469d5cca24965af3b76764dd2e67c013a46649cda9be4e1ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Can't buy more pieces than the n\")\n        mstore(add(headStart, 96), \"umber selling\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f538b58aec58d0868a32c17e16e380d65e7f21281b58959578a69af73ab24088__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Can't buy mine\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b25f579279daf14688bec7089eb1a81f6805eaff04ae5f34f59d0bae2d53f56a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Pay correct price\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "172:2268:0:-:0;;;729:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;842:18;:37;;-1:-1:-1;;;;;842:37:0;;;-1:-1:-1;;;;;;842:37:0;;;;;;;;;886:44;;;;;;;;937:6;:16;;;;;;;;;;;;;;;;960:7;:18;;;;;;;;;;;985:6;:16;;;;1008:5;:14;172:2268;;14:177:27;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:27;-1:-1:-1;;;196:416:27:o;:::-;172:2268:0;;;;;;",
  "deployedSourceMap": "172:2268:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:21;;;;;;;;;;-1:-1:-1;276:21:0;;;;-1:-1:-1;;;;;276:21:0;;;;;;-1:-1:-1;;;;;178:32:27;;;160:51;;148:2;133:18;276:21:0;;;;;;;;2197:93;;;;;;;;;;-1:-1:-1;2263:21:0;2197:93;;;368:25:27;;;356:2;341:18;2197:93:0;222:177:27;1955:236:0;;;;;;;;;;;;;:::i;:::-;;232:39;;;;;;;;;;-1:-1:-1;232:39:0;;;;-1:-1:-1;;;;;232:39:0;;;195:32;;;;;;;;;;-1:-1:-1;195:32:0;;;;-1:-1:-1;;;;;195:32:0;;;355:20;;;;;;;;;;;;;;;;329:21;;;;;;;;;;;;;;;;302:22;;;;;;;;;;-1:-1:-1;302:22:0;;;;-1:-1:-1;;;;;302:22:0;;;1701:248;;;;;;;;;;;;;:::i;1034:661::-;;;;;;:::i;:::-;;:::i;1955:236::-;1997:18;;:43;;-1:-1:-1;;;1997:43:0;;2034:4;1997:43;;;160:51:27;-1:-1:-1;;;;;1997:18:0;;;;:28;;133:18:27;;1997:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;1989:105;;;;-1:-1:-1;;;1989:105:0;;1438:2:27;1989:105:0;;;1420:21:27;1477:2;1457:18;;;1450:30;1516:34;1496:18;;;1489:62;-1:-1:-1;;;1567:18:27;;;1560:42;1619:19;;1989:105:0;;;;;;;;;2101:13;;:48;;-1:-1:-1;;;2101:48:0;;2143:4;2101:48;;;160:51:27;-1:-1:-1;;;;;2101:13:0;;;;:33;;133:18:27;;2101:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2177:6:0;;-1:-1:-1;;;;;2177:6:0;;-1:-1:-1;;2156:29:0;1701:248;1761:6;;-1:-1:-1;;;;;1761:6:0;1747:10;:20;1739:60;;;;-1:-1:-1;;;1739:60:0;;1851:2:27;1739:60:0;;;1833:21:27;1890:2;1870:18;;;1863:30;1929:29;1909:18;;;1902:57;1976:18;;1739:60:0;1649:351:27;1739:60:0;1806:18;;1846:6;;;1806:47;;-1:-1:-1;;;1806:47:0;;1834:10;1806:47;;;2179:51:27;;;;2246:18;;;2239:34;-1:-1:-1;;;;;1806:18:0;;;;:27;;2152:18:27;;1806:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1869:1:0;1860:6;:10;1895:7;;1919:6;;1884:42;;;-1:-1:-1;;;;;1895:7:0;;;2806:34:27;;1912:4:0;2871:2:27;2856:18;;2849:43;1919:6:0;;;;2908:18:27;;;2901:43;1884:42:0;;;;;;2756:2:27;1884:42:0;;;1933:10;:8;:10::i;:::-;1701:248::o;1034:661::-;1112:6;;1101:7;:17;;1093:75;;;;-1:-1:-1;;;1093:75:0;;3157:2:27;1093:75:0;;;3139:21:27;3196:2;3176:18;;;3169:30;3235:34;3215:18;;;3208:62;-1:-1:-1;;;3286:18:27;;;3279:43;3339:19;;1093:75:0;2955:409:27;1093:75:0;1228:6;;-1:-1:-1;;;;;1228:6:0;1214:10;:20;1206:47;;;;-1:-1:-1;;;1206:47:0;;3571:2:27;1206:47:0;;;3553:21:27;3610:2;3590:18;;;3583:30;-1:-1:-1;;;3629:18:27;;;3622:44;3683:18;;1206:47:0;3369:338:27;1206:47:0;1290:7;1282:5;;:15;;;;:::i;:::-;1268:9;:30;1260:60;;;;-1:-1:-1;;;1260:60:0;;4219:2:27;1260:60:0;;;4201:21:27;4258:2;4238:18;;;4231:30;-1:-1:-1;;;4277:18:27;;;4270:47;4334:18;;1260:60:0;4017:341:27;1260:60:0;1337:7;1327:6;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;1351:18:0;;:48;;-1:-1:-1;;;1351:48:0;;1379:10;1351:48;;;2179:51:27;2246:18;;;2239:34;;;-1:-1:-1;;;;;1351:18:0;;;;:27;;2152:18:27;;1351:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1414:6:0;;1406:47;;-1:-1:-1;;;;;1414:6:0;;;;1431:21;1406:47;;;;;1414:6;1406:47;1414:6;1406:47;1431:21;1414:6;1406:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1476:7:0;;1500:6;;1467:72;;;-1:-1:-1;;;;;1476:7:0;;;4821:34:27;;1493:4:0;4886:2:27;4871:18;;4864:43;1500:6:0;;;;4923:18:27;;;4916:43;1508:10:0;4990:2:27;4975:18;;4968:43;5042:3;5027:19;;5020:35;;;1529:9:0;4801:3:27;5071:19;;5064:35;1467:72:0;;;;;;4770:3:27;1467:72:0;;;1650:6;;1660:1;1650:11;1646:44;;1672:10;:8;:10::i;:::-;1034:661;:::o;862:180:27:-;921:6;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;-1:-1:-1;1013:23:27;;862:180;-1:-1:-1;862:180:27:o;1047:184::-;1117:6;1170:2;1158:9;1149:7;1145:23;1141:32;1138:52;;;1186:1;1183;1176:12;1138:52;-1:-1:-1;1209:16:27;;1047:184;-1:-1:-1;1047:184:27:o;2284:277::-;2351:6;2404:2;2392:9;2383:7;2379:23;2375:32;2372:52;;;2420:1;2417;2410:12;2372:52;2452:9;2446:16;2505:5;2498:13;2491:21;2484:5;2481:32;2471:60;;2527:1;2524;2517:12;2471:60;2550:5;2284:277;-1:-1:-1;;;2284:277:27:o;3712:127::-;3773:10;3768:3;3764:20;3761:1;3754:31;3804:4;3801:1;3794:15;3828:4;3825:1;3818:15;3844:168;3917:9;;;3948;;3965:15;;;3959:22;;3945:37;3935:71;;3986:18;;:::i;:::-;3844:168;;;;:::o;4363:128::-;4430:9;;;4451:11;;;4448:37;;;4465:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./IFractionalizedNFT.sol\";\r\n\r\ncontract F_NFTSale{\r\n  IERC20 public F_NFTContractERC20;\r\n  IFractionalizedNFT public F_NFTContract;\r\n  address public seller;\r\n  address public F_NFTCA;\r\n  uint256 public amount;\r\n  uint256 public price;\r\n\r\n  // 이벤트\r\n  event Purchase (\r\n    address F_CA,\r\n    address SaleCA,\r\n    address seller,\r\n    address buyer,\r\n    uint256 buyAmount,\r\n    uint256 payValue\r\n  );\r\n  event CancelSale (\r\n    address F_CA,\r\n    address SaleCA,\r\n    address seller\r\n  );\r\n  // event Check (\r\n  //   uint256 price\r\n  // );\r\n  // event Received(address, uint);\r\n\r\n  constructor (\r\n    address _seller,\r\n    address _F_NFTCA,\r\n    uint256 _amount,\r\n    uint256 _price\r\n  ) {\r\n    F_NFTContractERC20 = IERC20(_F_NFTCA);\r\n    F_NFTContract = IFractionalizedNFT(_F_NFTCA);\r\n    seller = _seller;\r\n    F_NFTCA = _F_NFTCA;\r\n    amount = _amount;\r\n    price = _price;\r\n  }\r\n\r\n  function purchase (uint256 _amount) external payable{\r\n    require(_amount <= amount, \"Can't buy more pieces than the number selling\");\r\n    // value의 단위는 wei\r\n    require(msg.sender != seller, \"Can't buy mine\");\r\n    require(msg.value == (price * _amount), \"Pay correct price\");\r\n    amount -= _amount;\r\n    F_NFTContractERC20.transfer(msg.sender, _amount);\r\n    payable(seller).transfer(address(this).balance);\r\n\r\n    emit Purchase(F_NFTCA, address(this), seller, msg.sender, _amount, msg.value);\r\n    // 팔고 있는 조각이 다 팔린 판매컨트랙트 주소 제거 후 컨트랙트 폭파\r\n    if (amount == 0) {\r\n      destruct();\r\n    }\r\n  }\r\n\r\n  function cancelSale() external {\r\n    require(msg.sender == seller, \"Only seller can cancel sale\");\r\n    F_NFTContractERC20.transfer(msg.sender, amount);\r\n    amount = 0;\r\n\r\n    emit CancelSale(F_NFTCA, address(this), seller);\r\n    destruct();\r\n  }\r\n\r\n  function destruct() public {\r\n    require(F_NFTContractERC20.balanceOf(address(this)) == 0, \"Only can destruct when contract has no piece\");\r\n    F_NFTContract.removeSoldoutSaleCA(address(this));\r\n    selfdestruct(payable(seller));\r\n  }\r\n\r\n  function getBalance() public view returns (uint256) {\r\n    return address(this).balance;\r\n  }\r\n\r\n  // 컨트랙트가 ether를 받기 위해 필요한 함수\r\n  receive() external payable {\r\n    // emit Received(msg.sender, msg.value);\r\n  }\r\n}",
  "sourcePath": "D:\\ssafy\\2학기\\자율\\S07P31B102\\Blockchain\\contracts\\F_NFTSale.sol",
  "ast": {
    "absolutePath": "project:/contracts/F_NFTSale.sol",
    "exportedSymbols": {
      "F_NFTSale": [
        243
      ],
      "IERC20": [
        2208
      ],
      "IFractionalizedNFT": [
        1201
      ]
    },
    "id": 244,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 244,
        "sourceUnit": 2209,
        "src": "60:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IFractionalizedNFT.sol",
        "file": "./IFractionalizedNFT.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 244,
        "sourceUnit": 1202,
        "src": "134:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "F_NFTSale",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243
        ],
        "name": "F_NFTSale",
        "nameLocation": "181:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "72c24435",
            "id": 6,
            "mutability": "mutable",
            "name": "F_NFTContractERC20",
            "nameLocation": "209:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "195:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2208",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "IERC20",
                "nameLocations": [
                  "195:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2208,
                "src": "195:6:0"
              },
              "referencedDeclaration": 2208,
              "src": "195:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2208",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58a5bf64",
            "id": 9,
            "mutability": "mutable",
            "name": "F_NFTContract",
            "nameLocation": "258:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "232:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFractionalizedNFT_$1201",
              "typeString": "contract IFractionalizedNFT"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IFractionalizedNFT",
                "nameLocations": [
                  "232:18:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1201,
                "src": "232:18:0"
              },
              "referencedDeclaration": 1201,
              "src": "232:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFractionalizedNFT_$1201",
                "typeString": "contract IFractionalizedNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 11,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "291:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "276:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2196024",
            "id": 13,
            "mutability": "mutable",
            "name": "F_NFTCA",
            "nameLocation": "317:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "302:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa8c217c",
            "id": 15,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "344:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "329:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 17,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "370:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "355:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "dccb5bce6e0213237e0f6a2b3fac1111566917989d8d207b69e82385a13a9759",
            "id": 31,
            "name": "Purchase",
            "nameLocation": "404:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "F_CA",
                  "nameLocation": "428:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "420:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "SaleCA",
                  "nameLocation": "447:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "439:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "468:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "460:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "489:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "481:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyAmount",
                  "nameLocation": "509:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "501:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "payValue",
                  "nameLocation": "533:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "525:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:133:0"
            },
            "src": "398:149:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9b6a328868f7e8d317d22d8a06ed8853be50e49fa45fb32826e7efaef4b8651",
            "id": 39,
            "name": "CancelSale",
            "nameLocation": "557:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "F_CA",
                  "nameLocation": "583:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "575:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "SaleCA",
                  "nameLocation": "602:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "594:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "623:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "615:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:66:0"
            },
            "src": "551:84:0"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "835:193:0",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "F_NFTContractERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "842:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2208",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52,
                          "name": "_F_NFTCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "870:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 51,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "863:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2208_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "863:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2208",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "842:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2208",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "842:37:0"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "F_NFTContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "886:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFractionalizedNFT_$1201",
                        "typeString": "contract IFractionalizedNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58,
                          "name": "_F_NFTCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "921:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 57,
                        "name": "IFractionalizedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "902:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFractionalizedNFT_$1201_$",
                          "typeString": "type(contract IFractionalizedNFT)"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "902:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFractionalizedNFT_$1201",
                        "typeString": "contract IFractionalizedNFT"
                      }
                    },
                    "src": "886:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFractionalizedNFT_$1201",
                      "typeString": "contract IFractionalizedNFT"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "886:44:0"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "937:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "946:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "937:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "937:16:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "F_NFTCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "960:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67,
                      "name": "_F_NFTCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "970:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "960:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "960:18:0"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "985:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "985:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "985:16:0"
                },
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1008:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1016:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1008:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:14:0"
                }
              ]
            },
            "id": 79,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "756:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "748:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_F_NFTCA",
                  "nameLocation": "778:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "770:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "801:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "793:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "823:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "815:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:93:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:0:0"
            },
            "scope": 243,
            "src": "729:299:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1086:609:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1101:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 86,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1112:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1101:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e277420627579206d6f726520706965636573207468616e20746865206e756d6265722073656c6c696e67",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46e7d1ecf6390b3469d5cca24965af3b76764dd2e67c013a46649cda9be4e1ae",
                          "typeString": "literal_string \"Can't buy more pieces than the number selling\""
                        },
                        "value": "Can't buy more pieces than the number selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46e7d1ecf6390b3469d5cca24965af3b76764dd2e67c013a46649cda9be4e1ae",
                          "typeString": "literal_string \"Can't buy more pieces than the number selling\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1214:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1218:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1214:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 94,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1228:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1214:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e277420627579206d696e65",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1236:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f538b58aec58d0868a32c17e16e380d65e7f21281b58959578a69af73ab24088",
                          "typeString": "literal_string \"Can't buy mine\""
                        },
                        "value": "Can't buy mine"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f538b58aec58d0868a32c17e16e380d65e7f21281b58959578a69af73ab24088",
                          "typeString": "literal_string \"Can't buy mine\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1206:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 100,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1268:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1272:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1268:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "1282:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 103,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "1290:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1282:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 105,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1281:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1268:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617920636f7272656374207072696365",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1300:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b25f579279daf14688bec7089eb1a81f6805eaff04ae5f34f59d0bae2d53f56a",
                          "typeString": "literal_string \"Pay correct price\""
                        },
                        "value": "Pay correct price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b25f579279daf14688bec7089eb1a81f6805eaff04ae5f34f59d0bae2d53f56a",
                          "typeString": "literal_string \"Pay correct price\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1260:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:60:0"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1327:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1337:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1327:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1379:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1383:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1379:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 119,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1391:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 114,
                        "name": "F_NFTContractERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1351:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2208",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1370:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "1351:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 129,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1439:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_F_NFTSale_$243",
                                "typeString": "contract F_NFTSale"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_F_NFTSale_$243",
                                "typeString": "contract F_NFTSale"
                              }
                            ],
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1431:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 127,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1431:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1431:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1445:7:0",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1431:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 124,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1414:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1406:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1406:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1422:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1406:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:47:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "F_NFTCA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 138,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1493:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_F_NFTSale_$243",
                              "typeString": "contract F_NFTSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_F_NFTSale_$243",
                              "typeString": "contract F_NFTSale"
                            }
                          ],
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1485:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 136,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1485:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1485:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 140,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1500:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1508:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1512:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1508:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1520:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1529:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1533:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1529:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 134,
                      "name": "Purchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1467:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "EmitStatement",
                  "src": "1462:77:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 148,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1650:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1660:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1650:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 155,
                  "nodeType": "IfStatement",
                  "src": "1646:44:0",
                  "trueBody": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "1663:27:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 151,
                            "name": "destruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "1672:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1672:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "1672:10:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "efef39a1",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nameLocation": "1043:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1061:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1053:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1052:17:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:0:0"
            },
            "scope": 243,
            "src": "1034:661:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1732:217:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1747:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1751:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1747:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1761:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1747:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c6c65722063616e2063616e63656c2073616c65",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1769:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f44736c86924af9d0ae454a410929a75fdc6d77df18748572abd303b33840e",
                          "typeString": "literal_string \"Only seller can cancel sale\""
                        },
                        "value": "Only seller can cancel sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f44736c86924af9d0ae454a410929a75fdc6d77df18748572abd303b33840e",
                          "typeString": "literal_string \"Only seller can cancel sale\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1739:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1834:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1838:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1834:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 173,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1846:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 168,
                        "name": "F_NFTContractERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1806:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2208",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1825:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "1806:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:47:0"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1860:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1869:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1860:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:10:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "F_NFTCA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1895:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1912:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_F_NFTSale_$243",
                              "typeString": "contract F_NFTSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_F_NFTSale_$243",
                              "typeString": "contract F_NFTSale"
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1904:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1904:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1904:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 186,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1919:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 180,
                      "name": "CancelSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1884:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1884:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1879:47:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 189,
                      "name": "destruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "1933:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:10:0"
                }
              ]
            },
            "functionSelector": "e7e10490",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelSale",
            "nameLocation": "1710:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:2:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:0"
            },
            "scope": 243,
            "src": "1701:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1982:209:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 201,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2034:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_F_NFTSale_$243",
                                    "typeString": "contract F_NFTSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_F_NFTSale_$243",
                                    "typeString": "contract F_NFTSale"
                                  }
                                ],
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2026:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 199,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2026:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2026:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 197,
                              "name": "F_NFTContractERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1997:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2208",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2016:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2165,
                            "src": "1997:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1997:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2044:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1997:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063616e206465737472756374207768656e20636f6e747261637420686173206e6f207069656365",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2047:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a52ff464248e64bdce52e6500f081873568adcdf28c1d05ea74aca1eba80cc6",
                          "typeString": "literal_string \"Only can destruct when contract has no piece\""
                        },
                        "value": "Only can destruct when contract has no piece"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a52ff464248e64bdce52e6500f081873568adcdf28c1d05ea74aca1eba80cc6",
                          "typeString": "literal_string \"Only can destruct when contract has no piece\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1989:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1989:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2143:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_F_NFTSale_$243",
                              "typeString": "contract F_NFTSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_F_NFTSale_$243",
                              "typeString": "contract F_NFTSale"
                            }
                          ],
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2135:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2135:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2135:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 209,
                        "name": "F_NFTContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2101:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFractionalizedNFT_$1201",
                          "typeString": "contract IFractionalizedNFT"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2115:19:0",
                      "memberName": "removeSoldoutSaleCA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1200,
                      "src": "2101:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2101:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2101:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 221,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2177:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2169:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2169:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2169:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 218,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "2156:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:29:0"
                }
              ]
            },
            "functionSelector": "2b68b9c6",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destruct",
            "nameLocation": "1964:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:2:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1982:0:0"
            },
            "scope": 243,
            "src": "1955:236:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "2249:41:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 233,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2271:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_F_NFTSale_$243",
                            "typeString": "contract F_NFTSale"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_F_NFTSale_$243",
                            "typeString": "contract F_NFTSale"
                          }
                        ],
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2263:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2263:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2277:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2263:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 236,
                  "nodeType": "Return",
                  "src": "2256:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "2206:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:2:0"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "2240:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:9:0"
            },
            "scope": 243,
            "src": "2197:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "2385:52:0",
              "statements": []
            },
            "id": 242,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2365:2:0"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2385:0:0"
            },
            "scope": 243,
            "src": "2358:79:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 244,
        "src": "172:2268:0",
        "usedErrors": []
      }
    ],
    "src": "33:2407:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-12T16:10:01.449Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}